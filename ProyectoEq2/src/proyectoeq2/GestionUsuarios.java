/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package proyectoeq2;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Camilo
 */
public class GestionUsuarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form GestionUsuarios
     */
    
    
    public GestionUsuarios() {
        initComponents();
        llenarTabla();
    }
    
    void llenarTabla(){
        DefaultTableModel tblModel = (DefaultTableModel)tablaUsuarios.getModel();
        String data[] = new String[2];
        try (DataInputStream dataInputStream = new DataInputStream(new FileInputStream("usuarios.txt"))) {
            while (dataInputStream.available() != 0){
                data[0] = dataInputStream.readUTF();
                data[1] = dataInputStream.readUTF();
                tblModel.addRow(data);
            }
            dataInputStream.close();
        }catch (IOException e){
            System.out.println(e.getMessage());
        }
    }
    
    boolean usuarioRepetido(String usuario){
        boolean esRepetido = false;
        try (DataInputStream dataInputStream = new DataInputStream(new FileInputStream("usuarios.txt"))){  //puede arreglarse leyendo los dos datos y solo utilizando usuario.
            String usuarioData;
            while (dataInputStream.available() != 0){
                usuarioData = dataInputStream.readUTF();
                dataInputStream.readUTF();
                if (usuarioData.equals(usuario)) {
                    esRepetido = true;
                }
            }
            dataInputStream.close();
        } catch (IOException e){
            System.out.println(e.getMessage());
        }
        return esRepetido;
    }
    
    void registrarUsuario(String usuario, String password){
        Usuario u = new Usuario(usuario, password);      
        if (usuario.isBlank() || password.isBlank() || usuario.contains(" ") || password.contains(" ") || usuarioRepetido(usuario)){
           JOptionPane.showMessageDialog(this, "Los carácteres no son válidos o el usuario ya existe, no se pudo registrar el usuario", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String data[] = {u.getUsuario(), u.getPassword()};
            DefaultTableModel tblModel = (DefaultTableModel)tablaUsuarios.getModel();
            tblModel.addRow(data);
            reescribirUsuarios();
            JOptionPane.showMessageDialog(this, "El usuario se registró exitosamente");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGestionUsuarios = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        labelRegistrarUsuario = new javax.swing.JLabel();
        labelUsuario = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        passwordF = new javax.swing.JPasswordField();
        buttonGuardar = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();

        setClosable(true);

        tablaUsuarios.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Usuario", "Contraseña"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaUsuarios.setShowGrid(false);
        jScrollPane1.setViewportView(tablaUsuarios);

        labelRegistrarUsuario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelRegistrarUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelRegistrarUsuario.setText("Registrar Usuario");

        labelUsuario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelUsuario.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelUsuario.setText("Usuario:");

        labelPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelPassword.setText("Contraseña:");

        txtUsuario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        passwordF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        buttonGuardar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        buttonEliminar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelGestionUsuariosLayout = new javax.swing.GroupLayout(panelGestionUsuarios);
        panelGestionUsuarios.setLayout(panelGestionUsuariosLayout);
        panelGestionUsuariosLayout.setHorizontalGroup(
            panelGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGestionUsuariosLayout.createSequentialGroup()
                .addGroup(panelGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGestionUsuariosLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(panelGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonGuardar)
                            .addGroup(panelGestionUsuariosLayout.createSequentialGroup()
                                .addGroup(panelGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                    .addComponent(passwordF)))))
                    .addGroup(panelGestionUsuariosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelRegistrarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGestionUsuariosLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buttonEliminar)
                .addGap(123, 123, 123))
        );
        panelGestionUsuariosLayout.setVerticalGroup(
            panelGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGestionUsuariosLayout.createSequentialGroup()
                .addGroup(panelGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGestionUsuariosLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(labelRegistrarUsuario)
                        .addGap(36, 36, 36)
                        .addGroup(panelGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelUsuario)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPassword)
                            .addComponent(passwordF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(buttonGuardar)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGestionUsuariosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(buttonEliminar)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGestionUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGestionUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        String usuario = txtUsuario.getText();
        String password = new String(passwordF.getPassword());
        registrarUsuario(usuario, password);
    }//GEN-LAST:event_buttonGuardarActionPerformed
    
    void reescribirUsuarios(){
        DefaultTableModel tblModel = (DefaultTableModel)tablaUsuarios.getModel();
        try{
            new FileWriter("usuarios.txt", false).close();
        } catch (IOException e){
            System.out.println(e.getMessage());
        }
        for (int i = 0; i < tablaUsuarios.getRowCount(); i++) {
            try {
                Usuario u = new Usuario(tblModel.getValueAt(i, 0).toString(), tblModel.getValueAt(i, 1).toString());
                DataOutputStream dataOutputStream = new DataOutputStream(new FileOutputStream("usuarios.txt", true));
                dataOutputStream.writeUTF(u.getUsuario());
                dataOutputStream.writeUTF(u.getPassword());
                dataOutputStream.close();
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
    }
    
    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)tablaUsuarios.getModel();
        if (tablaUsuarios.getSelectedRowCount() == 1) {
            tblModel.removeRow(tablaUsuarios.getSelectedRow());
            reescribirUsuarios();
            JOptionPane.showMessageDialog(this, "Usuario eliminado correctamente");
        } else {
            JOptionPane.showMessageDialog(this, "Por favor selecciona una fila", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_buttonEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonGuardar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelRegistrarUsuario;
    private javax.swing.JLabel labelUsuario;
    private javax.swing.JPanel panelGestionUsuarios;
    private javax.swing.JPasswordField passwordF;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
